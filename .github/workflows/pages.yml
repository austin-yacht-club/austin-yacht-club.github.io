name: Deploy GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths:
      - "index.html"
      - "style.css"
      - "script.js"
      - "w017.png"
      - ".github/workflows/pages.yml"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Create deployment directory
        run: |
          mkdir -p _site
          cp index.html _site/
          cp style.css _site/
          cp script.js _site/
          if [ -f w017.png ]; then
            cp w017.png _site/
          else
            echo "Warning: w017.png not found, creating placeholder"
            # Create a placeholder image
            convert -size 640x480 xc:lightgray -gravity center -pointsize 36 -annotate +0+0 "W017 Image\nLoading..." _site/w017.png || echo "ImageMagick not available, skipping placeholder"
          fi
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: _site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        
      - name: Create deployment summary
        run: |
          echo "## 🚀 GitHub Pages Deployment" >> $GITHUB_STEP_SUMMARY
          echo "✅ Successfully deployed to GitHub Pages" >> $GITHUB_STEP_SUMMARY
          echo "🌐 Site URL: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
          echo "📅 Deployed at: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
